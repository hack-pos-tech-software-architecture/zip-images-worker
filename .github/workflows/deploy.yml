name: Deploy Lambda Function

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR repository if it doesn't exist
        run: |
          aws ecr describe-repositories \
          --repository-names function-extract-frames-worker || aws ecr create-repository \
          --repository-name function-extract-frames-worker

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: function-zip-images-worker
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Update Lambda Function Code
        run: |
          aws lambda update-function-code \
            --function-name functionZipImagesWorker \
            --image-uri ${{ steps.login-ecr.outputs.registry }}/function-zip-images-worker:${{ github.sha }}

      - name: Wait for Lambda Function to be Active
        run: |
          while true; do
            STATUS=$(aws lambda get-function --function-name functionZipImagesWorker --query 'Configuration.State' --output text)
            LAST_UPDATE_STATUS=$(aws lambda get-function --function-name functionZipImagesWorker --query 'Configuration.LastUpdateStatus' --output text)
            
            if [ "$STATUS" == "Active" ] && [ "$LAST_UPDATE_STATUS" == "Successful" ]; then
              echo "Lambda function is now Active and ready for updates."
              break
            fi
            
            echo "Waiting for Lambda function to be Active and ready... Current status: $STATUS, Last update status: $LAST_UPDATE_STATUS"
            sleep 10
          done

      # - name: Update Lambda Function Configuration
      #   run: |
      #     aws lambda update-function-configuration \
      #       --function-name functionZipImagesWorker \
      #       --environment "Variables={BUCKET_VIDEO_PROCESSOR_S3=${{ secrets.BUCKET_VIDEO_PROCESSOR_S3 }},SQS_QUEUE_EXTRACT_FRAMES_URL=${{ secrets.SQS_QUEUE_EXTRACT_FRAMES_URL }}}"